; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.9.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.9.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.9.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉snakesladders.web꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉snakesladders.web꞉> 
#'snakesladders.board.snakesladders.cmds/move-bead
clj꞉snakesladders.board.snakesladders.cmds꞉> PATHS
({:type :cell, :id 0}
 {:type :cell, :id 1}
 {:type :cell, :id 2}
 {:type :cell, :id 3}
 {:type :cell, :id 4}
 {:type :cell, :id 5}
 {:type :cell, :id 6}
 {:type :cell, :id 7}
 {:type :cell, :id 8}
 {:type :cell, :id 9}
 {:type :cell, :id 10}
 {:type :cell, :id 11}
 {:type :cell, :id 12}
 {:type :cell, :id 13}
 {:type :cell, :id 14}
 {:type :cell, :id 15}
 {:type :cell, :id 16}
 {:type :cell, :id 17}
 {:type :cell, :id 18}
 {:type :cell, :id 19}
 {:type :cell, :id 20}
 {:type :cell, :id 21}
 {:type :cell, :id 22}
 {:type :cell, :id 23}
 {:type :cell, :id 24}
 {:type :cell, :id 25}
 {:type :cell, :id 26}
 {:type :cell, :id 27}
 {:type :cell, :id 28}
 {:type :cell, :id 29}
 {:type :cell, :id 30}
 {:type :cell, :id 31}
 {:type :cell, :id 32}
 {:type :cell, :id 33}
 {:type :cell, :id 34}
 {:type :cell, :id 35}
 {:type :cell, :id 36}
 {:type :cell, :id 37}
 {:type :cell, :id 38}
 {:type :cell, :id 39}
 {:type :cell, :id 40}
 {:type :cell, :id 41}
 {:type :cell, :id 42}
 {:type :cell, :id 43}
 {:type :cell, :id 44}
 {:type :cell, :id 45}
 {:type :cell, :id 46}
 {:type :cell, :id 47}
 {:type :cell, :id 48}
 {:type :cell, :id 49}
 ...)
clj꞉snakesladders.board.snakesladders.cmds꞉> (nth PATHS 1)
{:type :cell, :id 1}
clj꞉snakesladders.board.snakesladders.cmds꞉> (mk-cell 0)
; Syntax error compiling at (output.calva-repl:80:46).
; Unable to resolve symbol: mk-cell in this context
clj꞉snakesladders.board.snakesladders.cmds꞉> 
; Syntax error compiling at (output.calva-repl:80:46).
; Unable to resolve symbol: mk-cell in this context
clj꞉snakesladders.board.snakesladders.cmds꞉> 
#'snakesladders.board.snakesladders.board/mk-board
clj꞉snakesladders.board.snakesladders.board꞉> (mk-cell 0)
{:type :cell, :id 0}
clj꞉snakesladders.board.snakesladders.board꞉> (mk-beads)
; Execution error (ArityException) at snakesladders.board.snakesladders.board/eval4644 (form-init14651642458783825260.clj:90).
; Wrong number of args (0) passed to: snakesladders.board.snakesladders.board/mk-beads
clj꞉snakesladders.board.snakesladders.board꞉> (mk-beads (map #(keyword %) [:red :green :yellow :blue]) 3)
{{:type :bead, :color :green, :id 2} {:type :cell, :id 0},
 {:type :bead, :color :red, :id 1} {:type :cell, :id 0},
 {:type :bead, :color :blue, :id 1} {:type :cell, :id 0},
 {:type :bead, :color :green, :id 1} {:type :cell, :id 0},
 {:type :bead, :color :blue, :id 2} {:type :cell, :id 0},
 {:type :bead, :color :blue, :id 0} {:type :cell, :id 0},
 {:type :bead, :color :green, :id 0} {:type :cell, :id 0},
 {:type :bead, :color :red, :id 2} {:type :cell, :id 0},
 {:type :bead, :color :red, :id 0} {:type :cell, :id 0},
 {:type :bead, :color :yellow, :id 2} {:type :cell, :id 0},
 {:type :bead, :color :yellow, :id 0} {:type :cell, :id 0},
 {:type :bead, :color :yellow, :id 1} {:type :cell, :id 0}}
clj꞉snakesladders.board.snakesladders.board꞉> 
; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.9.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; nREPL Connection was closed
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉snakesladders.web꞉> 
; Jack-in done.
clj꞉snakesladders.web꞉> 
#'snakesladders.board.snakesladders.board/mk-board
clj꞉snakesladders.board.snakesladders.board꞉> (mk-board [:red :green :yellow :blue] 0)
{:beads {}, :current-color :red, :turns 1}
clj꞉snakesladders.board.snakesladders.board꞉> (mk-board [:red :green :yellow :blue] 3)
{:beads
 {{:type :bead, :color :green, :id 2} {:type :cell, :id 0},
  {:type :bead, :color :red, :id 1} {:type :cell, :id 0},
  {:type :bead, :color :blue, :id 1} {:type :cell, :id 0},
  {:type :bead, :color :green, :id 1} {:type :cell, :id 0},
  {:type :bead, :color :blue, :id 2} {:type :cell, :id 0},
  {:type :bead, :color :blue, :id 0} {:type :cell, :id 0},
  {:type :bead, :color :green, :id 0} {:type :cell, :id 0},
  {:type :bead, :color :red, :id 2} {:type :cell, :id 0},
  {:type :bead, :color :red, :id 0} {:type :cell, :id 0},
  {:type :bead, :color :yellow, :id 2} {:type :cell, :id 0},
  {:type :bead, :color :yellow, :id 0} {:type :cell, :id 0},
  {:type :bead, :color :yellow, :id 1} {:type :cell, :id 0}},
 :current-color :red,
 :turns 1}
clj꞉snakesladders.board.snakesladders.board꞉> 
